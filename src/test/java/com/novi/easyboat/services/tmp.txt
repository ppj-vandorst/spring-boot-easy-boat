    @Test
    void calculateChargeShouldChargeCorrectlyWithAValidChargeDuration() {
        var validCharge = calculationService.calculateCharge(LocalDateTime.parse("2021-01-01T12:00:00"), LocalDateTime.parse("2021-01-01T16:00:00"));

        assertThat(validCharge).isEqualTo(200);
    }

    @Test
    void calculateChargeShouldThrowAnExceptionWhenChargeDurationIs0Hours() {
        assertThrows(InvalidBookingException.class, () -> calculationService.calculateCharge(LocalDateTime.parse("2021-01-01T10:00:00"), LocalDateTime.parse("2021-01-01T10:00:00")));
    }

    @Test
    void calculateChargeShouldThrowAnExceptionWhenChargeDurationExceeds24Hours() {
        assertThrows(InvalidBookingException.class, () -> calculationService.calculateCharge(LocalDateTime.parse("2021-01-01T10:00:00"), LocalDateTime.parse("2021-01-03T10:00:00")));
    }